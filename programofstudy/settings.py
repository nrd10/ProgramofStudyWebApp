"""
Django settings for programofstudy project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from decouple import config
from celery.schedules import crontab

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# SECURITY WARNING: don't run with debug turned on in production!

SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = [
   'vcm-4469.vm.duke.edu',
    'gradops.ece.duke.edu'
]

#Sengrid Email Settings
# EMAIL_HOST = config('EMAIL_HOST')
# EMAIL_HOST_USER = config('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"

SENDGRID_API_KEY = config("SENDGRID_API_KEY")
SENDGRID_SANDBOX_MODE_IN_DEBUG = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'administration.apps.AdministrationConfig',
    'meng.apps.MengConfig',
    'ms.apps.MsConfig',
    'phd.apps.PhdConfig',
    'shared.apps.SharedConfig',
    'bootstrap3',
    'ajax_select',
    'django_select2',
    'crispy_forms',
    'widget_tweaks',
    'search_listview',
    'jquery',
    'django_filters',
    'import_export',
    'constance',
    'multiselectfield',
    'django_celery_beat',
    'oauth2_provider',
    'celery_progress',
    'disqus',
]

SITE_ID = 1

SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.RemoteUserMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

MIDDLEWARE_CLASSES = [
    'async_messages.middleware.AsyncMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'shared.backends.PasswordlessAuthBackend',
    # 'django.contrib.auth.backends.ModelBackend',
]

ROOT_URLCONF = 'programofstudy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./templates', "shared/templates", "meng/templates",
        "ms/templates", "phd/templates", "administration/templates",
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'programofstudy.wsgi.application'
TEMPLATE_DIRS = (
    os.path.join(SETTINGS_PATH, 'templates'),
)

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': 'memcached:11211',
    }
}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        # 'NAME': 'postgres',
        # 'USER': 'postgres',
        'NAME': config('DOCKER_NAME'),
        'USER': config('DOCKER_USER'),
        'PASSWORD': config('DOCKER_PASSWORD'),
        'HOST': 'db',
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
LOGIN_REDIRECT_URL = '/POS/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
# ]

#Specifies Custom User Model in "Shared" Application
AUTH_USER_MODEL = 'shared.User'

#Allows Import Export Library to commit changes to Database
IMPORT_EXPORT_USE_TRANSACTIONS = True



# CELERY STUFF

CELERY_BROKER_URL = 'redis://redis:6379'
CELERY_RESULT_BACKEND = 'redis://redis:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
USE_TZ = True
CELERY_TIMEZONE = 'US/Eastern'
CELERY_IMPORTS = ('administration.tasks',)
CELERY_BEAT_SCHEDULE = {
    'email_DGS': {
        'task': 'administration.tasks.email_DGS',
        'schedule': crontab(minute='30', hour='12'),
    },
    'email_advisor': {
        'task': 'administration.tasks.email_advisor',
        'schedule': crontab(minute='30', hour='12'),
    }
}
